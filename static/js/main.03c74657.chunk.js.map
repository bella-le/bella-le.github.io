{"version":3,"sources":["me.jpg","Bella_Le_Resume.pdf","app/components/Emoji.js","app/components/Landing.js","app/components/404.js","app/constants/routes.js","app/App.js","serviceWorker.js","index.js"],"names":["module","exports","Emoji","props","className","role","aria-label","label","aria-hidden","symbol","StyledCard","styled","Card","StyledDiv","div","StyledLink","a","Landing","Body","src","Me","fluid","roundedCircle","href","Footer","Resume","CardLink","Link","Invalid","Title","to","CenterDiv","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,6C,6OCW5BC,EAVD,SAAAC,GAAK,OACf,0BACIC,UAAU,QACVC,KAAK,MACLC,aAAYH,EAAMI,MAAQJ,EAAMI,MAAQ,GACxCC,cAAaL,EAAMI,MAAQ,QAAU,QAEpCJ,EAAMM,S,8kBCAf,IAAMC,EAAaC,YAAOC,IAAPD,CAAH,KAIVE,EAAYF,IAAOG,IAAV,KAYTC,EAAaJ,IAAOK,EAAV,KAiCDC,EAvBC,kBACZ,kBAACP,EAAD,KACI,kBAAC,IAAKQ,KAAN,KACI,kBAACL,EAAD,KAAW,kBAAC,IAAD,CAAOM,IAAKC,IAAIC,OAAK,EAACC,eAAa,IAAG,8BACjD,kBAAC,EAAD,CAAOb,OAAO,WAFlB,uCAE4D,6BAF5D,sBAGuB,kBAACM,EAAD,CAAYQ,KAAK,qBAAjB,gBAA8D,6BAAM,6BAH3F,SAIU,6BACN,kBAAC,EAAD,CAAOd,OAAO,iBALlB,cAKoC,6BAChC,kBAAC,EAAD,CAAOA,OAAO,iBANlB,eAMqC,6BACjC,kBAAC,EAAD,CAAOA,OAAO,iBAPlB,gBAOsC,6BAClC,kBAAC,EAAD,CAAOA,OAAO,iBARlB,aAQmC,6BAE/B,6BAVJ,oBAWgB,kBAACM,EAAD,CAAYQ,KAAK,iDAAjB,cAAwF,6BAXxG,kBAYc,kBAACR,EAAD,CAAYQ,KAAK,4BAAjB,sBAEd,kBAAC,IAAKC,OAAN,KACI,kBAACT,EAAD,CAAYQ,KAAME,KAAlB,UADJ,WACoD,+BAChD,kBAACV,EAAD,KAAY,kBAAC,EAAD,CAAON,OAAO,iBAA1B,qB,8TC7CZ,IAAMC,EAAaC,YAAOC,IAAPD,CAAH,KAIVe,EAAWf,YAAOgB,IAAPhB,CAAH,KAoBCiB,EAVC,kBACZ,kBAAC,EAAD,KACI,kBAAC,IAAKV,KAAN,KACI,kBAAC,IAAKW,MAAN,YAAgB,kBAAC,EAAD,CAAOpB,OAAO,kBADlC,2BAIA,kBAAC,IAAKe,OAAN,KAAa,kBAACE,EAAD,CAAUI,GC3BR,KD2BF,W,wQEnBrB,IAAMC,EAAYpB,IAAOG,IAAV,KAwBAkB,EAZH,kBACV,kBAACD,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,OAAK,EAACC,KDxBE,ICwBoBC,UAAWlB,IAC9C,kBAAC,IAAD,CAAOiB,KAAK,OAAOC,UAAWP,IAC9B,kBAAC,IAAD,CAAUE,GAAG,aCdDM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.03c74657.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.d4a195f5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bella_Le_Resume.e7fdb1c6.pdf\";","import React from 'react';\r\nconst Emoji = props => (\r\n    <span\r\n        className=\"emoji\"\r\n        role=\"img\"\r\n        aria-label={props.label ? props.label : \"\"}\r\n        aria-hidden={props.label ? \"false\" : \"true\"}\r\n    >\r\n        {props.symbol}\r\n    </span>\r\n);\r\nexport default Emoji;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Image from 'react-bootstrap/Image'\r\nimport Me from '../../me.jpg';\r\nimport Resume from '../../Bella_Le_Resume.pdf';\r\nimport Emoji from './Emoji';\r\n\r\nconst StyledCard = styled(Card)`\r\n    width: auto;\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n    margin: auto;\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n    width: auto;\r\n    @media (min-width: 800px) {\r\n        margin-left: 10px;\r\n        float: right;\r\n        width: 250px;\r\n    }\r\n`;\r\n\r\nconst StyledLink = styled.a`\r\n    color: #000;\r\n    &:focus, &:hover, &:visited, &:link, &:active {\r\n        text-decoration: none;\r\n    }\r\n    &:hover {\r\n        color: #890067;\r\n    }\r\n`;\r\n\r\nconst Landing = () => (\r\n    <StyledCard>\r\n        <Card.Body>\r\n            <StyledDiv><Image src={Me} fluid roundedCircle /><br /></StyledDiv>\r\n            <Emoji symbol=\"✨\" /> hi i'm bel and i think you're swell<br />\r\n            computer science @ <StyledLink href=\"https://ucsd.edu/\">UC San Diego</StyledLink><br /><br />\r\n            I like<br />\r\n            <Emoji symbol=\"🔥\" /> spicy food<br />\r\n            <Emoji symbol=\"💻\" /> typing away<br />\r\n            <Emoji symbol=\"🐶\" /> my dog Lucky<br />\r\n            <Emoji symbol=\"🍫\" /> chocolate<br />\r\n\r\n            <br />\r\n            currently → <StyledLink href=\"https://www.amazon.com/adlp/amazonattribution\">Amazon NYC</StyledLink><br />\r\n            contact → <StyledLink href=\"mailto:hello@bellabhl.me\">hello@bellabhl.me</StyledLink>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n            <StyledLink href={Resume}>resume</StyledLink> • <span></span>\r\n            <StyledLink><Emoji symbol=\"🧩\" /> (coming soon)</StyledLink>\r\n        </Card.Footer>\r\n    </StyledCard>\r\n);\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Link } from 'react-router-dom';\r\nimport Emoji from './Emoji';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nconst StyledCard = styled(Card)`\r\n    width: 18rem;\r\n`;\r\n\r\nconst CardLink = styled(Link)`\r\n    color: #000;\r\n    &:focus, &:hover, &:visited, &:link, &:active {\r\n        text-decoration: none;\r\n    }\r\n    &:hover {\r\n        color: #890067;\r\n    }\r\n`;\r\n\r\nconst Invalid = () => (\r\n    <StyledCard>\r\n        <Card.Body>\r\n            <Card.Title>404 <Emoji symbol=\"💀\" /></Card.Title>\r\n            not supposed to be here\r\n        </Card.Body>\r\n        <Card.Footer><CardLink to={ROUTES.LANDING}>back</CardLink></Card.Footer>\r\n    </StyledCard>\r\n);\r\n\r\nexport default Invalid;\r\n","export const LANDING = '/';\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport Landing from './components/Landing';\r\nimport Invalid from './components/404';\r\nimport * as ROUTES from './constants/routes';\r\n\r\nconst CenterDiv = styled.div`\r\n    position: absolute;\r\n    width: 380px;\r\n    margin: auto;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    @media (min-width: 800px) {\r\n      width: auto;\r\n    }\r\n`;\r\n\r\nconst App = () => (\r\n  <CenterDiv>\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path={ROUTES.LANDING} component={Landing} />\r\n        <Route path='/404' component={Invalid} />\r\n        <Redirect to='/404' />\r\n      </Switch>\r\n    </Router>\r\n  </CenterDiv>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}